<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.uni.mapper.uni_workplaceMapper">


	<resultMap type="com.uni.domain.uni_workplace_iVO" id="leaseMap">
		<id property="ino" column="ino" />
		<result property="title" column="title" />
		<result property="location" column="location" />
		<result property="thumbnail" column="thumbnail" />
		<result property="comforts" column="comforts" />
		<result property="price" column="price" />
		<result property="context" column="context" />
		<result property="rDate" column="rDate" />
		<result property="mno" column="mno" />
		<result property="readCount" column="readCount" />
		<collection property="attachList" resultMap="photoMap">
		</collection>
	</resultMap>
	
	<resultMap type="com.uni.domain.SWorkPlaceVO" id="ShareMap">
		<id property="sno" column="sno" />
		<result property="title" column="title" />
		<result property="location" column="location" />
		<result property="thumbnail" column="thumbnail" />
		<result property="comforts" column="comforts" />
		<result property="price" column="price" />
		<result property="context" column="context" />
		<result property="rDate" column="rDate" />
		<result property="pCount" column="pCount" />
		<result property="myTime" column="myTime" />
		<result property="myDate" column="myDate" />
		<result property="mno" column="mno" />
		<result property="readCount" column="readCount" />
		<collection property="attachList" resultMap="photoMap">
		</collection>
	</resultMap>
	
	<resultMap type="com.uni.domain.uni_PhotoVO" id="photoMap">
		<result property="pno" column="pno" />
		<result property="path" column="path" />
		<result property="uuid" column="uuid" />
		<result property="fileName" column="fileName" />
		<result property="ino" column="ino" />
		<result property="sno" column="sno" />
	</resultMap>
	
	<insert id="insertWorkPlace_i">
		<selectKey keyProperty="ino" order="BEFORE" resultType="int">
				select uni_workplace_i_seq.nextval from dual
		</selectKey>
		insert into uni_workplace_i (ino, title, location, thumbnail, comforts, price, context, rDate, mno, readcount)
		values(#{ino}, #{title}, #{location}, #{thumbnail}, #{comforts}, #{price}, #{context}, sysdate, #{mno}, 0)
	</insert>
	
	<select id="readShare" resultMap="ShareMap">
	 	select *
		from uni_workplace_s s , uni_photo p 
		where s.sno = p.sno and s.sno = #{sno}
	</select>
	
	<select id="read" resultMap="leaseMap">
	 	select *
		from uni_workplace_I i , uni_photo p 
		where i.ino = p.ino and i.ino = #{ino}
	</select>
	
	<insert id="insertAttach">
		<if test="ino != 0">
		insert into uni_photo (pno, path, uuid, filename, ino)
		values(uni_photo_seq.nextval, #{path}, #{uuid}, #{fileName}, #{ino})
		</if>
		<if test = "sno!=0">
		insert into uni_photo (pno, path, uuid, filename, sno)
		values(uni_photo_seq.nextval, #{path}, #{uuid}, #{fileName}, #{sno})
		</if>
	</insert>
	
	<update id="updateWorkPlace_i">
	update uni_workplace_i set title = #{title}, location = #{location}, thumbnail = #{thumbnail}, comforts = #{comforts}, price = #{price} where ino = #{ino}
	</update>
	
	<delete id ="deletePhoto">
	delete from uni_photo where ino =#{ino}
	</delete>
	
	<delete id ="deletePhotoS">
	delete from uni_photo where sno = #{sno}
	</delete>
	
	<insert id="insertWorkplace_s">
		<selectKey keyProperty="sno" order="BEFORE" resultType="int">
				select uni_workplace_s_seq.nextval from dual
		</selectKey>
		insert into uni_workplace_s (sno, title, location, thumbnail, comforts, price, context, rDate, pCount, myDate, myTime,  mno, readcount)
		values(#{sno}, #{title}, #{location}, #{thumbnail}, #{comforts}, #{price}, #{context}, sysdate, #{pCount}, #{myDate}, #{myTime}, #{mno}, 0)
	</insert>


	<select id="workPlaceList"
		resultType="com.uni.domain.uni_workplace_iVO">
		select * from uni_workplace_i
	</select>

	<select id="workPlaceList_i"
		resultType="com.uni.domain.IWorkPlaceVO">
		select * from uni_workplace_i
		where location like
		'%'||#{location}||'%' order by ino
	</select>

	<select id="workPlaceList_s"
		resultType="com.uni.domain.SWorkPlaceVO">
		select * from uni_workplace_s
		where location like
		'%'||#{location}||'%' order by sno
	</select>

	<select id="avg_star_i" resultType="com.uni.domain.StarAvgVO">
		select round(avg(star)) as
		avg,
		r.ino, i.location from uni_review r full outer join
		uni_workplace_i i on r.ino
		=
		i.ino where i.location like
		'%'||#{location}||'%'
		group by r.ino,
		i.location order by r.ino
	</select>

	<select id="avg_star_s" resultType="com.uni.domain.StarAvgVO">
		select round(avg(star)) as
		avg,
		r.sno, s.location from uni_review r full outer join
		uni_workplace_s s on r.sno
		=
		s.sno where s.location like '%'||#{location}||'%' group by r.sno,
		s.location order by r.sno
	</select>

	<!-- 공유 핫토픽 -->
	<select id="readHotTopic"
		resultType="com.uni.domain.uni_hotTopicVO">

		select round(avg(r.star)) as star, w.name, w.photo, w.sno, w.context, w.thumbnail, w.mno, w.readcount from
        (select m.name, m.photo, w.sno,
      w.context,w.thumbnail, m.mno, w.readcount from
      uni_workplace_s w, uni_member m where w.mno = m.mno) w full outer join uni_review r on w.sno is not null group by w.name, w.photo, w.sno, w.context, w.thumbnail, 
        w.mno, w.readcount order by w.readcount desc

	</select>
	<!-- 임대 핫토픽 -->
	<select id="readHotTopicImde"
		resultType="com.uni.domain.uni_hotTopicVO">

		select round(avg(r.star)) as star, w.name, w.photo, w.ino, w.context, w.thumbnail, w.mno, w.readcount from
        (select m.name, m.photo, w.ino,
      w.context,w.thumbnail, m.mno, w.readcount from
      uni_workplace_i w, uni_member m where w.mno = m.mno) w full outer join uni_review r on w.ino is not null group by w.name, w.photo, w.ino, w.context, w.thumbnail, 
        w.mno, w.readcount order by w.readcount desc

	</select>
	
	<select id = "getOldFiles" resultType = "com.uni.domain.uni_PhotoVO">
		select * from uni_photo where path = to_char(sysdate-1, 'yyyy/mm/dd')
	</select>
	
	<select id ="getShinChung" resultType="com.uni.domain.uni_ShinChungVO">
		select * from uni_sinchung where ino = #{ino}
	</select>
	
	<insert id ="insertShinChung">
		insert into uni_sinchung(rno, reservation, mno, ino, sDate) values (uni_sinchung_seq.nextval,#{reservation},#{mno},#{ino}, sysdate)
	</insert>
	
	<select id="getShinChungLike" resultType="com.uni.domain.uni_ShinChungVO">
		select * from uni_sinchung where ino = #{ino} and reservation like '%'||#{reservation}||'%' 
	</select>
	
	
	<select id="sinchung_list_s"
		resultType="com.uni.domain.Sinchung_ListVO">
	<![CDATA[
		select aa.*, ss.reservation, ss.mno from (select w.title,
		m.name, m.phone, s.sno
		from uni_sinchung s, uni_member m,
		uni_workplace_s w where w.sno
		= s.sno
		and m.mno = s.mno and flag='d'  order by s.sno asc)
		aa,
		(select s.reservation, s.sno, m.mno
		from uni_sinchung s, uni_member
		m, uni_workplace_s w where w.sno =
		s.sno
		and m.mno = s.mno and flag='s'
		and m.mno = #{mno}  order by s.sno asc) ss
		where aa.sno= ss.sno and rownum<4
		]]>
	</select>

	<select id="sinchung_list_d"
		resultType="com.uni.domain.Sinchung_ListVO">
	<![CDATA[
		select aa.*, ss.mno from (select w.title, m.name, m.phone,
		s.sno,
		s.reservation
		from uni_sinchung s, uni_member m, uni_workplace_s
		w
		where w.sno = s.sno
		and m.mno = s.mno and flag='d' and m.mno = #{mno}
		order by s.sno asc)
		aa,
		(select
		s.reservation, s.sno, m.mno
		from
		uni_sinchung s, uni_member
		m,
		uni_workplace_s w where w.sno = s.sno
		and
		m.mno = s.mno and flag='s' order by s.sno asc)
		ss
		where aa.sno = ss.sno
		and rownum < 4
]]>
	</select>

	<select id="Isinchung_list"
		resultType="com.uni.domain.Sinchung_ListVO">
		<![CDATA[
					select w.title, w.name, w.phone, s.ino, s.reservation
    				  from uni_sinchung s, uni_member m, (select * from uni_workplace_i i, uni_member m where i.mno = m.mno) w where w.ino = s.ino 
     	  			 and m.mno = s.mno and m.mno = #{mno} and rownum<4 order by s.ino
		]]>
	</select>


	<select id="sinchung_list_s_ajax"
		resultType="com.uni.domain.Sinchung_ListVO">
	<![CDATA[
		select aa.*, ss.reservation, ss.mno from (select w.title,
		m.name, m.phone, s.sno
		from uni_sinchung s, uni_member m,
		uni_workplace_s w where w.sno
		= s.sno
		and m.mno = s.mno and flag='d'  order by s.sno asc)
		aa,
		(select s.reservation, s.sno, m.mno
		from uni_sinchung s, uni_member
		m, uni_workplace_s w where w.sno =
		s.sno
		and m.mno = s.mno and flag='s'
		and m.mno = #{mno}  order by s.sno asc) ss
		where aa.sno= ss.sno
		]]>
	</select>


	<select id="sinchung_list_d_ajax"
		resultType="com.uni.domain.Sinchung_ListVO">
	<![CDATA[
		select aa.*, ss.mno from (select w.title, m.name, m.phone,
		s.sno,
		s.reservation
		from uni_sinchung s, uni_member m, uni_workplace_s
		w
		where w.sno = s.sno
		and m.mno = s.mno and flag='d' and m.mno = #{mno}
		order by s.sno asc)
		aa,
		(select
		s.reservation, s.sno, m.mno
		from
		uni_sinchung s, uni_member
		m,
		uni_workplace_s w where w.sno = s.sno
		and
		m.mno = s.mno and flag='s' order by s.sno asc)
		ss
		where aa.sno = ss.sno
]]>
	</select>
	<select id="Isinchung_list_ajax"
		resultType="com.uni.domain.Sinchung_ListVO">
		select w.title, w.name, w.phone, s.ino, s.reservation
		from
		uni_sinchung s, uni_member m, (select * from uni_workplace_i i,
		uni_member m where i.mno = m.mno) w where w.ino = s.ino
		and m.mno =
		s.mno and m.mno = #{mno} order by s.ino

	</select>
	
	<select id="sinchungList"
        resultType="com.uni.domain.SinchungVO">
        select w.title, w.location, w.price, w.name as hname,
        w.phone as hphone,
        m.name as cname, m.phone as cphone, s.ino,
        s.reservation, m.mno
        from uni_sinchung s, uni_member m, (select * from
        uni_workplace_i i,
        uni_member m where i.mno = m.mno) w where w.ino =
        s.ino
        and m.mno = s.mno and s.ino = #{no} order by s.ino
    </select>
    
    <update id="updateWorkplace_s">
    	update uni_workplace_s set title = #{title}, location = #{location}, thumbnail = #{thumbnail}, comforts = #{comforts}, price = #{price}, context = #{context}, pCount = #{PCount}, myTime = #{myTime}, myDate = #{myDate}   where sno = #{sno}
    </update>
    
    <select id="getSinchungBySno" resultType="com.uni.domain.JoinSCMemVO">
			select s.reservation, m.photo, m.name, m.mno, m.userID, m.phone
			from uni_sinchung s, uni_member m 
			where s.mno = m.mno and sno = #{sno}
    </select>
    
    <select id="duplicateCheckTime" resultType="int">
    <![CDATA[
    	SELECT COUNT(*) cnt 
		FROM dual 
		WHERE #{firstTime} < #{toLastTime} 
		AND #{lastTime} > #{toFirstTime}
		AND ROWNUM = 1 
    ]]> 
      </select>
      
      <insert id="insertShinChungS">
      		insert into uni_sinchung(rno, reservation, mno, sno, sDate) values (uni_sinchung_seq.nextval, #{reservation}, #{mno}, #{sno}, sysdate)
      </insert>
      
      <delete id = "deleteSinchung">
      <if test="mno != 0">
      delete from uni_sinchung where mno = #{mno} and sno = #{sno}
      </if>
      delete from uni_sinchung where sno = #{sno}
       </delete>
    
    <insert id="insertConfirm">
    	<if test="sno != 0">
    		insert into uni_confirm(cno, cName, cPhone, reservation, myTime, sno, mno)
    		values(uni_confirm_seq.nextval, #{cName}, #{cPhone}, #{reservation}, #{myTime}, #{sno}, #{mno})
    	</if>
    	<if test="ino != 0">
    		insert into uni_confirm(cno, cName, cPhone, reservation, ino, mno)
    		values(uni_confirm_seq.nextval, #{cName}, #{cPhone}, #{reservation}, #{ino}, #{mno})
    	</if>
    </insert>
    
    <update id="updateReadCount">
    		<if test="sno != 0">
    			update uni_workplace_s set readcount = readcount + 1 where sno = #{sno}
    		</if>
    		<if test="ino != 0">
    			update uni_workplace_i set readcount = readcount + 1 where ino = #{ino}
    		</if>
    </update>
    
    <select id="getTodayLeaseList" resultType="Integer">
    	select distinct ino from uni_sinchung where TO_CHAR(sDate,'yy/MM/DD') = (select TO_CHAR(sysdate,'yy/MM/dd') from dual)
    </select>
    
    <select id="getTodaySinchungList" resultType="com.uni.domain.uni_ShinChungVO">
    	select * from uni_sinchung where ino = #{ino} and TO_CHAR(sDate,'yy/MM/DD') = (select TO_CHAR(sysdate,'yy/MM/dd') from dual)
    </select>
    
    <delete id="deleteLeaseS">
    	delete from uni_sinchung where ino = #{ino}
    </delete>
    
</mapper>